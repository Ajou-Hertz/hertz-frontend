import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

import { Avatar } from "@mui/material";
import { Link } from "react-router-dom";
import UploadProfilePhoto from "../components/Sub/UploadProfilePhoto";
import axiosPrivate from "../api/axios";
// import PersonIcon from "@mui/icons-material/Person";
import { Button } from "antd";
import { useRecoilState } from "recoil";
import { userState } from "../recoil";

function Profile({ userData }) {
    const [user, setUser] = useRecoilState(userState);
    const [selectedImage, setSelectedImage] = useState([]); // 선택한 이미지 상태
    const [contactLink, setContactLink] = useState(userData?.contactLink || ""); // 연락수단 상태
    const navigate = useNavigate();

    useEffect(() => {
        if (userData?.contactLink !== undefined) {
            setContactLink(userData.contactLink);
        }
    }, [userData]);

    const handleEditProfile = async () => {
        try {
            const Data = new FormData();
            // 이미지 추가
            for (const image of selectedImage) {
                Data.append("profileImage", image);
            }
            // 엔드포인트 설정
            var endpoint = "users/me/profile-images";
            // API 호출
            const response = await axiosPrivate.put(endpoint, Data, {
                headers: {
                    "Content-Type": "multipart/form-data",
                    "Hertz-API-Version": 1,
                    Authorization: `Bearer ${user?.token}`,
                },
            });
            if (response.status === 200) {
                alert("프로필사진 변경이 완료되었습니다.");
            } else {
                alert("프로필사진 변경에 실패했습니다.");
            }
        } catch (err) {
            console.error(err);
            alert("프로필사진 변경에 실패했습니다.");
        }
    };
    const handleEditContact = async () => {
        try {
            const Data = new FormData();
            // 이미지 추가
            Data.append("contactLink", contactLink);
            // 엔드포인트 설정
            var endpoint = "users/me/contact-link";
            // API 호출
            const response = await axiosPrivate.put(endpoint, Data, {
                headers: {
                    "Hertz-API-Version": 1,
                    Authorization: `Bearer ${user?.token}`,
                    "Content-Type": "application/json",
                },
            });
            if (response.status === 200) {
                alert("연락수단 변경이 완료되었습니다.");
            } else {
                alert("연락수단 변경에 실패했습니다.");
            }
        } catch (err) {
            console.error(err);
            alert("연락수단 변경에 실패했습니다.");
        }
    };

    // 이미지 변경 시 호출될 함수
    const handleImageChange = (image) => {
        setSelectedImage(image);
        console.log("선택한 이미지:", image);
    };
    const handleDeleteAccount = async () => {
        if (window.confirm("정말로 탈퇴하시겠습니까?")) {
            try {
                const endpoint = `/users/${userData.id}`;
                const response = await axiosPrivate.delete(endpoint, {
                    headers: {
                        "Hertz-API-Version": 1,
                        Authorization: `Bearer ${user?.token}`,
                    },
                    data: {
                        userId: userData.id,
                    },
                });

                if (response.status === 204) {
                    alert("회원 탈퇴가 완료되었습니다.");
                    setUser(null);
                    localStorage.removeItem("token");
                    localStorage.removeItem("recoil-persist");
                    navigate("/"); // 회원 탈퇴 후 홈 페이지로 이동
                } else {
                    alert("회원 탈퇴에 실패했습니다.");
                }
            } catch (err) {
                console.error(err);
                alert("회원 탈퇴에 실패했습니다.");
            }
        }
    };
    return (
        <section className="profile">
            <div style={{ textAlign: "left" }}>
                <svg
                    width="195"
                    height="24"
                    viewBox="0 0 195 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    style={{ marginLeft: "40" }}
                >
                    <path
                        d="M4.78125 2.73828L9.2959 13.7666H9.47559L13.9902 2.73828H18.168V19H14.8887V8.35352H14.7539L10.5088 18.9326H8.2627L4.01758 8.30859H3.88281V19H0.603516V2.73828H4.78125ZM22.7949 23.582C22.0986 23.582 21.5371 23.5596 21.1104 23.5146V20.9316C21.6794 20.9616 22.1286 20.9766 22.458 20.9766C22.7201 20.9766 22.9372 20.9541 23.1094 20.9092C23.2891 20.8643 23.4575 20.7594 23.6147 20.5947C23.7795 20.43 23.9255 20.1829 24.0527 19.8535L24.2549 19.3369L19.875 6.80371H23.3564L25.917 15.7881H26.0518L28.6348 6.80371H32.1611L27.3994 20.3477C27.0326 21.3883 26.4823 22.1857 25.7485 22.7397C25.0148 23.3013 24.0303 23.582 22.7949 23.582ZM39.1465 2.73828H45.5254C46.7383 2.73828 47.7827 2.97038 48.6587 3.43457C49.5347 3.89128 50.201 4.53516 50.6577 5.36621C51.1144 6.18978 51.3428 7.14062 51.3428 8.21875C51.3428 9.30436 51.1069 10.2627 50.6353 11.0938C50.1711 11.9173 49.4935 12.5575 48.6025 13.0142C47.7191 13.4709 46.6634 13.6992 45.4355 13.6992H42.5156V19H39.1465V2.73828ZM44.8965 10.9814C45.8698 10.9814 46.6073 10.7344 47.1089 10.2402C47.6105 9.73861 47.8613 9.06478 47.8613 8.21875C47.8613 7.38021 47.6105 6.71761 47.1089 6.23096C46.6073 5.7443 45.8698 5.50098 44.8965 5.50098H42.5156V10.9814H44.8965ZM52.5107 15.5859C52.5107 14.3281 52.9338 13.4072 53.7798 12.8232C54.6258 12.2393 55.7152 11.9098 57.0479 11.835C57.8714 11.7826 58.8822 11.7301 60.0801 11.6777V10.6895C60.0651 10.1803 59.8892 9.78353 59.5522 9.49902C59.2153 9.21452 58.7399 9.07227 58.126 9.07227C57.5719 9.07227 57.119 9.19206 56.7671 9.43164C56.4152 9.67122 56.1943 10.0007 56.1045 10.4199H52.9375C53.0049 9.70117 53.252 9.05729 53.6787 8.48828C54.113 7.91927 54.7157 7.47005 55.4868 7.14062C56.258 6.8112 57.1676 6.64648 58.2158 6.64648C59.1442 6.64648 59.9977 6.79248 60.7764 7.08447C61.5625 7.37646 62.1914 7.83317 62.6631 8.45459C63.1423 9.06852 63.3818 9.84342 63.3818 10.7793V19H60.2373V17.3154H60.1475C59.8255 17.9069 59.3651 18.3748 58.7661 18.7192C58.1746 19.0562 57.4447 19.2246 56.5762 19.2246C55.7826 19.2246 55.0788 19.0898 54.4648 18.8203C53.8584 18.5433 53.3792 18.1315 53.0273 17.585C52.6829 17.0384 52.5107 16.3721 52.5107 15.5859ZM55.7002 15.4961C55.7002 15.9528 55.8649 16.3084 56.1943 16.563C56.5312 16.8101 56.973 16.9336 57.5195 16.9336C58.0137 16.9336 58.4554 16.8325 58.8447 16.6304C59.2415 16.4282 59.5485 16.1512 59.7656 15.7993C59.9827 15.4474 60.0876 15.0618 60.0801 14.6426V13.7554C59.7282 13.7629 59.2939 13.7816 58.7773 13.8115C58.2607 13.8415 57.8639 13.8714 57.5869 13.9014C57.0029 13.9613 56.5425 14.126 56.2056 14.3955C55.8687 14.665 55.7002 15.0319 55.7002 15.4961ZM71.4004 23.8291C70.2923 23.8291 69.3265 23.6719 68.5029 23.3574C67.6794 23.043 67.0317 22.5975 66.5601 22.021C66.0959 21.452 65.8301 20.7819 65.7627 20.0107H69.042C69.1318 20.4824 69.3864 20.8343 69.8057 21.0664C70.2324 21.306 70.7865 21.4258 71.4678 21.4258C72.2839 21.4258 72.9165 21.2349 73.3657 20.853C73.8224 20.4787 74.0508 19.8835 74.0508 19.0674V16.8438H73.8936C73.639 17.4053 73.2197 17.877 72.6357 18.2588C72.0592 18.6331 71.318 18.8203 70.4121 18.8203C69.4688 18.8203 68.6227 18.5994 67.874 18.1577C67.1253 17.7085 66.5339 17.0347 66.0996 16.1362C65.6654 15.2378 65.4482 14.1335 65.4482 12.8232C65.4482 11.4906 65.6691 10.36 66.1108 9.43164C66.5526 8.50326 67.1478 7.80697 67.8965 7.34277C68.6527 6.87858 69.4912 6.64648 70.4121 6.64648C71.333 6.64648 72.0742 6.85986 72.6357 7.28662C73.1973 7.71338 73.6165 8.23372 73.8936 8.84766H74.0283V6.80371H77.3301V19.1348C77.3301 20.1455 77.0793 21.0028 76.5776 21.7065C76.076 22.4103 75.3797 22.9382 74.4888 23.29C73.5978 23.6494 72.5684 23.8291 71.4004 23.8291ZM71.4453 16.3271C72.2689 16.3271 72.909 16.0239 73.3657 15.4175C73.8224 14.8035 74.0508 13.9538 74.0508 12.8682C74.0508 11.7676 73.8224 10.8991 73.3657 10.2627C72.909 9.61882 72.2689 9.29688 71.4453 9.29688C70.6217 9.29688 69.9854 9.62256 69.5361 10.2739C69.0869 10.9178 68.8623 11.7826 68.8623 12.8682C68.8623 13.9388 69.0832 14.7848 69.5249 15.4062C69.9741 16.0202 70.6143 16.3271 71.4453 16.3271ZM85.4385 19.2471C84.2031 19.2471 83.1325 18.9925 82.2266 18.4834C81.3281 17.9743 80.6356 17.248 80.1489 16.3047C79.6623 15.3538 79.4189 14.2383 79.4189 12.958C79.4189 11.7077 79.6585 10.6071 80.1377 9.65625C80.6243 8.69792 81.3132 7.95671 82.2041 7.43262C83.0951 6.90853 84.1283 6.64648 85.3037 6.64648C86.3968 6.64648 87.3739 6.87858 88.2349 7.34277C89.1034 7.79948 89.7847 8.49202 90.2788 9.42041C90.7804 10.3488 91.0312 11.4831 91.0312 12.8232V13.7666H82.6982C82.6982 14.373 82.8105 14.9009 83.0352 15.3501C83.2673 15.7993 83.5929 16.1475 84.0122 16.3945C84.439 16.6341 84.9368 16.7539 85.5059 16.7539C86.0524 16.7539 86.5241 16.6453 86.9209 16.4282C87.3177 16.2036 87.6022 15.9004 87.7744 15.5186H90.9414C90.7842 16.2673 90.4622 16.9224 89.9756 17.4839C89.4889 18.0454 88.8563 18.4797 88.0776 18.7866C87.3065 19.0936 86.4268 19.2471 85.4385 19.2471ZM87.8867 11.6777C87.8867 11.1911 87.7782 10.7568 87.561 10.375C87.3514 9.98568 87.0557 9.68245 86.6738 9.46533C86.292 9.24821 85.8577 9.13965 85.3711 9.13965C84.877 9.13965 84.4277 9.25195 84.0234 9.47656C83.6266 9.70117 83.3084 10.0081 83.0688 10.3975C82.8368 10.7868 82.7132 11.2135 82.6982 11.6777H87.8867ZM100.195 21.4482H97.3428L102.576 1.97461H105.451L100.195 21.4482ZM129.192 21.0664H126.43V10.8467H124.521V20.0781H121.825V0.963867H124.521V8.5332H126.43V0.626953H129.192V21.0664ZM115.267 13.5757C117.168 13.5233 118.973 13.3324 120.68 13.0029L120.972 15.4736C118.621 15.8779 116.225 16.0801 113.784 16.0801H112.392V2.89551H115.267V13.5757ZM155.449 18.6855H136.739V16.3047H155.449V18.6855ZM153.877 4.71484H151.002V10.9141H153.787V13.1602H138.289V10.9141H141.029V4.71484H138.199V2.42383H153.877V4.71484ZM148.172 10.9141V4.71484H143.904V10.9141H148.172ZM175.327 18.7979H156.617V16.4395H164.501V13.3623H158.773V6.48926H170.341V4.24316H158.751V1.95215H173.171V8.73535H161.648V11.0264H173.643V13.3623H167.354V16.4395H175.327V18.7979ZM193.655 11.1162H190.78V0.626953H193.655V11.1162ZM193.655 17.3828H182.627V18.6631H194.217V20.9316H179.797V15.3389H190.825V14.1484H179.752V11.9248H193.655V17.3828ZM188.489 4.06348H186.805V8.14014C187.673 8.07275 188.497 7.99414 189.275 7.9043L189.41 9.94824C186.236 10.4574 182.148 10.7119 177.146 10.7119L176.832 8.46582L179.033 8.44336V4.06348H177.371V1.88477H188.489V4.06348ZM184.042 8.30859V4.06348H181.773V8.38721L184.042 8.30859Z"
                        fill="black"
                    />
                </svg>
            </div>
            {/* <Divider /> */}
            <div
                className="profile_card"
                style={{
                    marginTop: "24px",
                    marginBottom: "24px",
                    display: "flex",
                    alignItems: "center",
                }}
            >
                <div style={{ alignItems: "center" }}>
                    {/* <Avatar
                        sx={{
                            bgcolor: "#97B4FF",
                            width: 80,
                            height: 80,
                            fontSize: 30,
                            marginRight: "16px",
                            marginLeft: "350px",
                            marginBottom: "30px",
                        }}
                    >
                        {userData?.nickName?.slice(0, 1).toUpperCase()}
                    </Avatar> */}
                    <UploadProfilePhoto
                        onImagesChange={handleImageChange}
                        imageUrls={userData?.profileImageUrl}
                    />
                    <button
                        type="button"
                        onClick={handleEditProfile}
                        style={{
                            borderRadius: "10px",
                            backgroundColor: "#D6E0F3",
                            borderColor: "#FFFFFF",
                            padding: "4px 8px",
                            fontSize: "16px",
                            border: "none",
                            marginLeft: "325px",
                        }}
                    >
                        내 프로필사진 저장
                    </button>
                </div>
                <div
                    className="detail_box"
                    style={{ flex: 1, marginLeft: "0px" }}
                >
                    <div style={{ textAlign: "left" }}>
                        <span style={{ color: "#757575", marginRight: "71px" }}>
                            이메일
                        </span>
                        <span>{userData?.email}</span>
                    </div>
                    <div style={{ textAlign: "left", marginTop: "20px" }}>
                        <span style={{ color: "#757575", marginRight: "56px" }}>
                            연동계정
                        </span>
                        <span>
                            {userData?.isKakaoAccountLinked
                                ? "카카오 연동 완료"
                                : "카카오 연동 미완료"}
                        </span>
                    </div>
                    <div style={{ textAlign: "left", marginTop: "20px" }}>
                        <span style={{ color: "#757575", marginRight: "56px" }}>
                            생년월일
                        </span>
                        <span>
                            {userData?.birth
                                ? `${userData?.birth[0]}-${String(
                                      userData?.createdAt[1]
                                  ).padStart(2, "0")}-${String(
                                      userData?.birth[2]
                                  ).padStart(2, "0")}`
                                : ""}
                        </span>
                    </div>
                    <div style={{ textAlign: "left", marginTop: "20px" }}>
                        <span style={{ color: "#757575", marginRight: "71px" }}>
                            가입일
                        </span>
                        <span>
                            {userData?.createdAt
                                ? `${userData?.createdAt[0]}-${String(
                                      userData?.createdAt[1]
                                  ).padStart(2, "0")}-${String(
                                      userData?.createdAt[2]
                                  ).padStart(2, "0")}`
                                : ""}
                        </span>
                    </div>
                    <div style={{ textAlign: "left", marginTop: "20px" }}>
                        <span style={{ color: "#757575", marginRight: "68px" }}>
                            비밀번호
                        </span>
                        <Link to="/updatePW">
                            <button
                                style={{
                                    display: "inline-block",
                                    verticalAlign: "top",
                                    border: "none",
                                    background: "transparent",
                                }}
                            >
                                <svg
                                    width="50"
                                    height="26"
                                    viewBox="0 0 50 26"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <path
                                        d="M45 0H5C2.23858 0 0 2.23858 0 5V21C0 23.7614 2.23858 26 5 26H45C47.7614 26 50 23.7614 50 21V5C50 2.23858 47.7614 0 45 0Z"
                                        fill="#D6E0F3"
                                    />
                                    <path
                                        d="M23.6406 15.5264H22.3291V11.5586H18.8428V13.0029H12.1523V5.58203H13.4473V8.20508H17.5645V5.58203H18.8428V7.30859H22.3291V4.60254H23.6406V15.5264ZM23.9727 19.0293H14.0947V14.4473H15.4062V17.9336H23.9727V19.0293ZM17.5645 11.9238V9.23438H13.4473V11.9238H17.5645ZM22.3291 10.4795V8.4043H18.8428V10.4795H22.3291ZM38.333 13.4678H37.0215V11.4756H33.1035V10.3965H37.0215V8.4043H33.2446C32.7687 9.57747 31.9829 10.5902 30.8872 11.4424C29.7915 12.2946 28.444 12.9587 26.8447 13.4346L26.2969 12.4053C27.4867 12.0511 28.5187 11.6001 29.3931 11.0522C30.2674 10.4989 30.9564 9.86247 31.46 9.14307C31.9635 8.42367 32.2596 7.64062 32.3481 6.79395H27.0439V5.69824H33.7676C33.7676 6.26823 33.7039 6.82161 33.5767 7.3584H37.0215V4.60254H38.333V13.4678ZM33.502 13.6172C34.4925 13.6172 35.3586 13.7306 36.1001 13.9575C36.8416 14.1844 37.4116 14.5109 37.8101 14.937C38.214 15.3576 38.416 15.8584 38.416 16.4395C38.416 17.026 38.214 17.5324 37.8101 17.9585C37.4116 18.3846 36.8416 18.7111 36.1001 18.938C35.3586 19.1649 34.4925 19.2783 33.502 19.2783C32.5003 19.2783 31.6287 19.1649 30.8872 18.938C30.1457 18.7111 29.5729 18.3846 29.1689 17.9585C28.7705 17.5324 28.5713 17.026 28.5713 16.4395C28.5713 15.8584 28.7705 15.3576 29.1689 14.937C29.5729 14.5109 30.1457 14.1844 30.8872 13.9575C31.6287 13.7306 32.5003 13.6172 33.502 13.6172ZM33.502 14.6631C32.766 14.6576 32.1213 14.7267 31.5679 14.8706C31.02 15.009 30.5967 15.2137 30.2979 15.4849C29.999 15.756 29.8496 16.0742 29.8496 16.4395C29.8496 16.8047 29.999 17.1229 30.2979 17.394C30.5967 17.6597 31.02 17.8617 31.5679 18C32.1157 18.1439 32.7604 18.2158 33.502 18.2158C34.2324 18.2158 34.8688 18.1439 35.4111 18C35.9535 17.8617 36.3713 17.6597 36.6646 17.394C36.9634 17.1229 37.1156 16.8047 37.1211 16.4395C37.1156 16.0742 36.9634 15.756 36.6646 15.4849C36.3657 15.2137 35.9451 15.009 35.4028 14.8706C34.8605 14.7267 34.2269 14.6576 33.502 14.6631Z"
                                        fill="black"
                                    />
                                </svg>
                            </button>
                        </Link>
                    </div>
                    <div style={{ textAlign: "left", marginTop: "20px" }}>
                        <span style={{ color: "#757575", marginRight: "56px" }}>
                            연락수단
                        </span>
                        <input
                            type="text"
                            value={contactLink}
                            onChange={(e) => setContactLink(e.target.value)}
                            style={{
                                width: "420px",
                                marginRight: "10px",
                                color: "#637DBE",
                            }}
                        />
                        <button
                            onClick={handleEditContact}
                            style={{
                                display: "inline-block",
                                verticalAlign: "top",
                                border: "none",
                                background: "transparent",
                            }}
                        >
                            <svg
                                width="50"
                                height="26"
                                viewBox="0 0 50 26"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                            >
                                <path
                                    d="M45 0H5C2.23858 0 0 2.23858 0 5V21C0 23.7614 2.23858 26 5 26H45C47.7614 26 50 23.7614 50 21V5C50 2.23858 47.7614 0 45 0Z"
                                    fill="#D6E0F3"
                                />
                                <path
                                    d="M23.6406 15.5264H22.3291V11.5586H18.8428V13.0029H12.1523V5.58203H13.4473V8.20508H17.5645V5.58203H18.8428V7.30859H22.3291V4.60254H23.6406V15.5264ZM23.9727 19.0293H14.0947V14.4473H15.4062V17.9336H23.9727V19.0293ZM17.5645 11.9238V9.23438H13.4473V11.9238H17.5645ZM22.3291 10.4795V8.4043H18.8428V10.4795H22.3291ZM38.333 13.4678H37.0215V11.4756H33.1035V10.3965H37.0215V8.4043H33.2446C32.7687 9.57747 31.9829 10.5902 30.8872 11.4424C29.7915 12.2946 28.444 12.9587 26.8447 13.4346L26.2969 12.4053C27.4867 12.0511 28.5187 11.6001 29.3931 11.0522C30.2674 10.4989 30.9564 9.86247 31.46 9.14307C31.9635 8.42367 32.2596 7.64062 32.3481 6.79395H27.0439V5.69824H33.7676C33.7676 6.26823 33.7039 6.82161 33.5767 7.3584H37.0215V4.60254H38.333V13.4678ZM33.502 13.6172C34.4925 13.6172 35.3586 13.7306 36.1001 13.9575C36.8416 14.1844 37.4116 14.5109 37.8101 14.937C38.214 15.3576 38.416 15.8584 38.416 16.4395C38.416 17.026 38.214 17.5324 37.8101 17.9585C37.4116 18.3846 36.8416 18.7111 36.1001 18.938C35.3586 19.1649 34.4925 19.2783 33.502 19.2783C32.5003 19.2783 31.6287 19.1649 30.8872 18.938C30.1457 18.7111 29.5729 18.3846 29.1689 17.9585C28.7705 17.5324 28.5713 17.026 28.5713 16.4395C28.5713 15.8584 28.7705 15.3576 29.1689 14.937C29.5729 14.5109 30.1457 14.1844 30.8872 13.9575C31.6287 13.7306 32.5003 13.6172 33.502 13.6172ZM33.502 14.6631C32.766 14.6576 32.1213 14.7267 31.5679 14.8706C31.02 15.009 30.5967 15.2137 30.2979 15.4849C29.999 15.756 29.8496 16.0742 29.8496 16.4395C29.8496 16.8047 29.999 17.1229 30.2979 17.394C30.5967 17.6597 31.02 17.8617 31.5679 18C32.1157 18.1439 32.7604 18.2158 33.502 18.2158C34.2324 18.2158 34.8688 18.1439 35.4111 18C35.9535 17.8617 36.3713 17.6597 36.6646 17.394C36.9634 17.1229 37.1156 16.8047 37.1211 16.4395C37.1156 16.0742 36.9634 15.756 36.6646 15.4849C36.3657 15.2137 35.9451 15.009 35.4028 14.8706C34.8605 14.7267 34.2269 14.6576 33.502 14.6631Z"
                                    fill="black"
                                />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <Button
                style={{
                    marginLeft: "1000px",
                    marginBottom: "30px",
                    marginTop: "20px",
                }}
                onClick={handleDeleteAccount}
            >
                회원 탈퇴하기
            </Button>
        </section>
    );
}

export default Profile;
